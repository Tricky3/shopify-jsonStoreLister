<script type="text/javascript">


var theremoteJsonRetailppl = {};
$.ajax({
	url: "{{ 'retailers_data.json' | asset_url | prepend: 'https:' }}",
	async: false,
	dataType: 'json',
	success: function(data) {
		theremoteJsonRetailppl = data;
	}
});
var usStates = [
    { state: 'ALABAMA', abbreviation: 'AL'},
    { state: 'ALASKA', abbreviation: 'AK'},
    /*{ state: 'AMERICAN SAMOA', abbreviation: 'AS'},*/
    { state: 'ARIZONA', abbreviation: 'AZ'},
    { state: 'ARKANSAS', abbreviation: 'AR'},
    { state: 'CALIFORNIA', abbreviation: 'CA'},
    { state: 'COLORADO', abbreviation: 'CO'},
    { state: 'CONNECTICUT', abbreviation: 'CT'},
    { state: 'DELAWARE', abbreviation: 'DE'},
    { state: 'DISTRICT OF COLUMBIA', abbreviation: 'DC'},
    /*{ state: 'FEDERATED STATES OF MICRONESIA', abbreviation: 'FM'},*/
    { state: 'FLORIDA', abbreviation: 'FL'},
    { state: 'GEORGIA', abbreviation: 'GA'},
    /*{ state: 'GUAM', abbreviation: 'GU'},*/
    { state: 'HAWAII', abbreviation: 'HI'},
    { state: 'IDAHO', abbreviation: 'ID'},
    { state: 'ILLINOIS', abbreviation: 'IL'},
    { state: 'INDIANA', abbreviation: 'IN'},
    { state: 'IOWA', abbreviation: 'IA'},
    { state: 'KANSAS', abbreviation: 'KS'},
    { state: 'KENTUCKY', abbreviation: 'KY'},
    { state: 'LOUISIANA', abbreviation: 'LA'},
    { state: 'MAINE', abbreviation: 'ME'},
    /*{ state: 'MARSHALL ISLANDS', abbreviation: 'MH'},*/
    { state: 'MARYLAND', abbreviation: 'MD'},
    { state: 'MASSACHUSETTS', abbreviation: 'MA'},
    { state: 'MICHIGAN', abbreviation: 'MI'},
    { state: 'MINNESOTA', abbreviation: 'MN'},
    { state: 'MISSISSIPPI', abbreviation: 'MS'},
    { state: 'MISSOURI', abbreviation: 'MO'},
    { state: 'MONTANA', abbreviation: 'MT'},
    { state: 'NEBRASKA', abbreviation: 'NE'},
    { state: 'NEVADA', abbreviation: 'NV'},
    { state: 'NEW HAMPSHIRE', abbreviation: 'NH'},
    { state: 'NEW JERSEY', abbreviation: 'NJ'},
    { state: 'NEW MEXICO', abbreviation: 'NM'},
    { state: 'NEW YORK', abbreviation: 'NY'},
    { state: 'NORTH CAROLINA', abbreviation: 'NC'},
    { state: 'NORTH DAKOTA', abbreviation: 'ND'},
    /*{ state: 'NORTHERN MARIANA ISLANDS', abbreviation: 'MP'},*/
    { state: 'OHIO', abbreviation: 'OH'},
    { state: 'OKLAHOMA', abbreviation: 'OK'},
    { state: 'OREGON', abbreviation: 'OR'},
    /*{ state: 'PALAU', abbreviation: 'PW'},*/
    { state: 'PENNSYLVANIA', abbreviation: 'PA'},
    /*{ state: 'PUERTO RICO', abbreviation: 'PR'},*/
    { state: 'RHODE ISLAND', abbreviation: 'RI'},
    { state: 'SOUTH CAROLINA', abbreviation: 'SC'},
    { state: 'SOUTH DAKOTA', abbreviation: 'SD'},
    { state: 'TENNESSEE', abbreviation: 'TN'},
    { state: 'TEXAS', abbreviation: 'TX'},
    { state: 'UTAH', abbreviation: 'UT'},
    { state: 'VERMONT', abbreviation: 'VT'},
    /*{ state: 'VIRGIN ISLANDS', abbreviation: 'VI'},*/
    { state: 'VIRGINIA', abbreviation: 'VA'},
    { state: 'WASHINGTON', abbreviation: 'WA'},
    { state: 'WEST VIRGINIA', abbreviation: 'WV'},
    { state: 'WISCONSIN', abbreviation: 'WI'},
    { state: 'WYOMING', abbreviation: 'WY' }
];
var data={"retailers":theremoteJsonRetailppl}, output = "", stateLiteral = "", outsideUS = "", physicalStore = "", featured = "", articleClass="";
function getObjects(obj, key, val) {
    var objects = [];
    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) continue;
        if (typeof obj[i] == 'object') {
            objects = objects.concat(getObjects(obj[i], key, val));    
        } else 
        if (i == key && obj[i] == val || i == key && val == '') { //
            objects.push(obj);
        } else if (obj[i] == val && key == ''){
            if (objects.lastIndexOf(obj) == -1){
                objects.push(obj);
            }
        }
    }
    return objects;
}
function getValues(obj, key) {
    var objects = [];
    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) continue;
        if (typeof obj[i] == 'object') {
            objects = objects.concat(getValues(obj[i], key));
        } else if (i == key) {
            objects.push(obj[i]);
        }
    }
    return objects;
}
function onlyUnique(value, index, self) {
    return self.indexOf(value) === index;
}
function cleanArray(actual){
  var newArray = [];
  for(var i = 0; i<actual.length; i++){
      if (actual[i]){
        newArray.push(actual[i]);
    }
  }
  return newArray;
}
function replaceState(stateString) {
  switch (stateString) {
    		case "AL":
    			stateLiteral = "Alabama";
    			outsideUS=false;
    			physicalStore=true;
    			featured = false;
				break;
			case "AK":
				stateLiteral = "Alaska";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "AZ":
				stateLiteral = "Arizona";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "AR":
				stateLiteral = "Arkansas";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "CA":
				stateLiteral = "California";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "CO":
				stateLiteral = "Colorado";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "CT":
				stateLiteral = "Connecticut";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "DE":
				stateLiteral = "Delaware";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "DC":
				stateLiteral = "District Of Columbia";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "FL":
				stateLiteral = "Florida";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "GA":
				stateLiteral = "Georgia";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "HI":
				stateLiteral = "Hawaii";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "ID":
				stateLiteral = "Idaho";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "IL":
				stateLiteral = "Illinois";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "IN":
				stateLiteral = "Indiana";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "IA":
				stateLiteral = "Iowa";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "KS":
				stateLiteral = "Kansas";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "KY":
				stateLiteral = "Kentucky";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "LA":
				stateLiteral = "Louisiana";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "ME":
				stateLiteral = "Maine";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MD":
				stateLiteral = "Maryland";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MA":
				stateLiteral = "Massachusetts";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MI":
				stateLiteral = "Michigan";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MN":
				stateLiteral = "Minnesota";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MS":
				stateLiteral = "Mississippi";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MO":
				stateLiteral = "Missouri";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "MT":
				stateLiteral = "Montana";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NE":
				stateLiteral = "Nebraska";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NV":
				stateLiteral = "Nevada";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NH":
				stateLiteral = "New Hampshire";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NJ":
				stateLiteral = "New Jersey";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NM":
				stateLiteral = "New Mexico";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NY":
				stateLiteral = "New York";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "NC":
				stateLiteral = "North Carolina";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "ND":
				stateLiteral = "North Dakota";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "OH":
				stateLiteral = "Ohio";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "OK":
				stateLiteral = "Oklahoma";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "OR":
				stateLiteral = "Oregon";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "PA":
				stateLiteral = "Pennsylvania";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "RI":
				stateLiteral = "Rhode Island";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "SC":
				stateLiteral = "South Carolina";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "SD":
				stateLiteral = "South Dakota";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "TN":
				stateLiteral = "Tennessee";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "TX":
				stateLiteral = "Texas";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "UT":
				stateLiteral = "Utah";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "VT":
				stateLiteral = "Vermont";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "VA":
				stateLiteral = "Virginia";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "WA":
				stateLiteral = "Washington";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "WV":
				stateLiteral = "West Virginia";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "WI":
				stateLiteral = "Wisconsin";
				outsideUS=false;
				physicalStore=true;
				featured = false;
				break;
			case "WY":
				stateLiteral = "Wyoming";
				outsideUS=false;
				physicalStore=true;
				featured = false;
			break;
			case "ONLINE":
				stateLiteral = "ONLINE";
				outsideUS=true;
				physicalStore=false;
				featured = false;
			break;
			case "SPECIAL":
				stateLiteral = "SPECIAL";
				outsideUS=true;
				physicalStore=false;
				featured = true;
			break;
    		default:
    		    stateLiteral = stateString;
    		    outsideUS=true;
    		    physicalStore=true;
    		    featured = false;
		}
}
function replaceCountry(countryString) {
  switch (countryString) {
    		case "United States":
				countryLiteral = "UNITED STATES";
				outsideUS=true;
			break;
    		default:
    		    countryLiteral = countryString;
    		    outsideUS=false;
    		}
}
var sortByProperty = function(prop) {
    return function(a,b) {
        if (typeof a[prop] == "number") {
            return (a[prop] - b[prop]);
        } else {
            return ((a[prop] < b[prop]) ? -1 : ((a[prop] > b[prop]) ? 1 : 0));
        }
    };
};

var states = getValues(data,'Province/State');
var uniqueStates = cleanArray(states.filter( onlyUnique )).sort();
var all_the_States = getValues(usStates,'abbreviation');
var statesTotal = uniqueStates.length;
var startingState="CA";
var usArr = [],overseasArr = [], overseasCountriesArr = [], homelandCountriesArr = [];
var countries = getValues(data,'Country');
var uniqueCountries = cleanArray(countries.filter( onlyUnique )).sort();
var countriesTotal = uniqueCountries.length;

{% if settings.store_locator_show_Online %}
var onlineRetailers = getObjects(data,'Province/State','ONLINE');
var countOnlineStores = onlineRetailers.length;
{% endif %}

{% if settings.store_locator_show_Special %}
	var specialRetailers = getObjects(data,'Province/State','SPECIAL');
		specialRetailers.sort(sortByProperty("Name"));
	var specialRetailersResultArr = [],splitSpecialRetailersArr = [],uniqueSpecials=[];
		for (var i=0,  tot=specialRetailers.length; i < tot; i++) {
    		var splitName 	= specialRetailers[i]["Name"].split("#")[0].trim();
    		var name 		= specialRetailers[i]["Name"];
			var address 	= specialRetailers[i]["Address"];
			var address2 	= specialRetailers[i]["Address 2"];
			var city 		= specialRetailers[i]["City"];
			var splitStateArray = [];
			splitStateArray = specialRetailers[i]["City"].split(',');
			if (splitStateArray.length>1){
				splitState 	= specialRetailers[i]["City"].split(',')[1].trim();
			}
			else{
				splitState = "ZZ";
			}
			var country 	= specialRetailers[i]["Country"];
			var zip 		= specialRetailers[i]["Postal/Zip Code"];
			var phone 		= specialRetailers[i]["Phone"];
			var website 	= specialRetailers[i]["Website"];
			var lat 		= specialRetailers[i]["Latitude"];
			var lng 		= specialRetailers[i]["Longitude"];
			specialRetailersResultArr.push({
				'splitName':splitName,
				'Name':name,
				'Address':address,
				'Address 2':address2,
				'City':city,
				'splitState':splitState,
				'Province/State':'Special',
				'Country':country,
				'Postal/Zip Code':zip,
				'Phone':phone,
				'Website':website,
				'Latitude':lat, 
				'Longitude':lng
			});
			splitSpecialRetailersArr[splitSpecialRetailersArr.length] = splitName; 
		}
		var uniqueSpecials = cleanArray(splitSpecialRetailersArr.filter( onlyUnique )).sort();
		var uniqueSpecialsTotal = uniqueSpecials.length;
	
{% endif %}

for (var x=0;  x < statesTotal; x++) {
	var state = uniqueStates[x];
	replaceState(state);
	if ((outsideUS === true) && (physicalStore === true) && (featured === false)) {
		overseasArr.push({'state':state,'stateLiteral':stateLiteral});
	}
	else if ((outsideUS === false) && (physicalStore === true) && (featured === false)) {
		usArr.push({'state':state,'stateLiteral':stateLiteral});
	}
	else{
	}
}

for (var x=0;  x < countriesTotal; x++) {
	var country = uniqueCountries[x];
	replaceCountry(country);
	if (outsideUS === true) {
		homelandCountriesArr.push({'country':country,'countryLiteral':countryLiteral});
	}
	else {
		overseasCountriesArr.push({'country':country,'countryLiteral':countryLiteral});
	}
}

var groupdivider = 4;
var thelinksWidth = (100/groupdivider);
var usStatesTotal = usArr.length;
var usaStatesOuterloops =  ~~(usStatesTotal/groupdivider);
var overseasCountriesTotal = overseasCountriesArr.length;
var overseasCountriesOuterloops =  ~~(overseasCountriesTotal/groupdivider);
var overseasCountriesPercentual_divide = (100 / (overseasCountriesOuterloops + 1 )).toFixed(2);
var all_the_statesTotal = all_the_States.length;
var all_states_groupdivider = 13;
var all_usaStatesOuterloops =  ~~(all_the_statesTotal/all_states_groupdivider);
var all_usaPercentual_divide = (100 / (all_usaStatesOuterloops + 1 )).toFixed(2);

{% if settings.store_locator_use_selectBox == "dropdown" %}
	articleClass = "commonuse dropdownStyle";
	output+= '<input id="default-collection-sortby" type="hidden" value="'+startingState.toLowerCase()+'">';
	output+= '<div class="sorter" style="text-align: center;"><label for="sort-by">Select Location: </label>';
	output+= '<select id="sort-by">';
	{% if settings.store_locator_show_Online %}
		if (countOnlineStores){
			output+= '<option value="online">Online Stores</option>';
		}
	{% endif %}
	{% if settings.store_locator_show_Overseas %}
		{% if settings.store_locator_aggreagate_Overseas %}
			output+= '<option value="international">International Stores</option>';
		{% else %}
			for (var j= 0; j < overseasCountriesTotal; j++) {
        		overseasCountry = overseasCountriesArr[j].country;
        		overseasCountryLiteral = overseasCountriesArr[j].countryLiteral;
				output+= '<option value="'+overseasCountry.toLowerCase().replace(/\s+/g, '')+'">'+overseasCountryLiteral.toLowerCase()+'</option>';
			}
		{% endif %}
	{% endif %}
	{% if settings.store_locator_show_Special %}
		if (uniqueSpecialsTotal){
			output+= '<option value="special">Special Retailers</option>';
		}
	{% endif %}
	for (var j= 0; j < usStatesTotal; j++) {
	    usState = usArr[j].state;
	    usStateLiteral = usArr[j].stateLiteral;
	    output+= '<option value="'+usState.toLowerCase().replace(/\s+/g, '')+'">'+usStateLiteral+'</option>';
	}
	output+= '</select>';
	output+= '</div>';   
{% elsif settings.store_locator_use_selectBox == "links" %}
	articleClass = "commonuse linksStyle";
	output+= '<div class="menu-items-wrapper"><div class="menu-items container"><div class="inner clearfix">';
	output+= '<div class="menu-item-holder US-retailers">';
	output+= '<h3 class="findus in-us">United States</h3>';
	output+= '<div class="float-mason">';
	outerloop:
    	for (var i=0; i <= usaStatesOuterloops; i++) {
    		output+= '<ul class="separator">';
      		for (var j= groupdivider*i; j < groupdivider*i+groupdivider; j++) {
      			if ( j === usStatesTotal) {
					break outerloop;
        		}
        		usState = usArr[j].state;
        		usStateLiteral = usArr[j].stateLiteral;
        		if (usState === startingState) { var activeclass = " active";	}else { var activeclass = "";}
				output+= '<li class="retailers_info linked"><a class="togglers'+activeclass+'" id="state-'+usState+'" data-collapse="true" data-collapse-el="#'+usState.toLowerCase().replace(/\s+/g, '')+'" data-id="'+usState.toLowerCase()+'">'+usStateLiteral+'</a></li>';
      		}
      		output+= '</ul>';
    	}
	output+= '</div></div>';
	{% if settings.store_locator_show_Overseas %}
		var overseas_shown = "x";
	{% else %}
		var overseas_shown = "o";
	{% endif %}
	{% if settings.store_locator_show_Online %}
		var online_shown = "x";
	{% else %}
		var online_shown = "o";
	{% endif %}
	{% if settings.store_locator_show_Special %}
		var special_shown = "x";
	{% else %}
		var special_shown = "o";
	{% endif %}
	output+= '<div class="additional_hold '+overseas_shown+online_shown+special_shown+'">';
	{% if settings.store_locator_show_Overseas %}
		output+= '<div class="menu-item-holder overseas-retailers">';
		output+= '<h3 class="findus in-overseas">Overseas</h3>';
		output+= '<div class="float-mason">';
		{% if settings.store_locator_aggreagate_Overseas %}
    		output+= '<ul class="separator">';
			output+= '<li class="retailers_info linked" id="intenationalHolder"><a class="togglers" id="state-non-us" data-collapse="true" data-collapse-el="#international" data-id="international">All Non-US Stores</a></li>';
    		output+= '</ul>';
    	{% else %}
			outerloop:
    			for (var i=0; i <= overseasCountriesOuterloops; i++) {
    				output+= '<ul class="separator">';
    			  	for (var j= groupdivider*i; j < groupdivider*i+groupdivider; j++) {
    			  		if ( j === overseasCountriesTotal) {
						break outerloop;
        				}
        				overseasCountry = overseasCountriesArr[j].country;
        				overseasCountryLiteral = overseasCountriesArr[j].countryLiteral;
        				if (overseasCountry === startingState) { var data_collapse = "false";	}else { var data_collapse = "true"; }
						output+= '<li class="retailers_info linked"><a class="togglers" id="country-'+overseasCountry+'" data-collapse="true" data-collapse-el="#'+overseasCountry.toLowerCase().replace(/\s+/g, '')+'" data-id="'+overseasCountry.toLowerCase()+'">'+overseasCountryLiteral.toLowerCase()+'</a></li>';
      				}
      				output+= '</ul>';
    			}
    	{% endif %}
		output+= '</div></div>';
	{% endif %}
	{% if settings.store_locator_show_Online %}
		if (countOnlineStores){
			output+= '<div class="menu-item-holder online-retailers">';
			output+= '<h3 class="findus in-online">Online</h3>';
			output+= '<div class="float-mason">';
			output+= '<ul class="separator" style = "width:100%;">';
			output+= '<li class="retailers_info linked" id="onlineStateHolder"><a class="togglers" id="state-online" data-collapse="true" data-collapse-el="#online" data-id="online">All Online Stores</a></li>';
			output+= '</ul>';
			output+= '</div></div>';
		}
	{% endif %}
	{% if settings.store_locator_show_Special %}
		if (uniqueSpecialsTotal){
			output+= '<div class="menu-item-holder special-retailers">';
			output+= '<h3 class="findus in-online">Special Retailers</h3>';
			output+= '<div class="float-mason">';
			output+= '<ul class="separator" style = "width:100%;">';
			output+= '<li class="retailers_info linked" id="specialStateHolder"><a class="togglers" id="state-featured" data-collapse="true" data-collapse-el="#special" data-id="special">Show our Special Retailers</a></li>';
			output+= '</ul>';
			output+= '</div></div>';
		}
	{% endif %}
output+= '</div>';
output+= '</div></div></div>';
{% else %}
{% if settings.store_locator_order == "fitColumns" %}
	articleClass = "commonuse nomenuStyle ftclmn";
	{% else %}
	articleClass = "commonuse nomenuStyle msnr";
	{% endif %}
{% endif %}
output+= '<article class="container '+ articleClass +'">';
{% if settings.store_locator_use_selectBox == "none" %}
output+= '<div class="fullspan"><h2 class="regionheading">United States</h2></div>';
output+= '<div class="inner clearfix float-mason" id="homeland">';
{% endif %}

for (var x=0;  x < statesTotal; x++) {
	var state = uniqueStates[x];
	var retailersByState = getObjects(data,'Province/State',state);
	retailersByState.sort(sortByProperty("Name"));
	replaceState(state);
	{% if settings.store_locator_aggregate_Special %}
		if ((outsideUS === true) && (physicalStore === true) && (featured === false) || (outsideUS === true) && (physicalStore === false) && (featured === true)) { } 
		else {
			if ((physicalStore === true) && (featured === false)) {
				var theheading = stateLiteral;var domChange = "no-domchange";
			}
			else {
				if (featured === false){
					var theheading = "Online";var domChange = "onlinewrapped";
				}
			}
	{% else %}
		if ((outsideUS === true) && (physicalStore === true) && (featured === false)) { } 
		else {
			if ((physicalStore === true) && (featured === false)) {
				var theheading = stateLiteral;var domChange = "no-domchange";
			}
			else{
				if (featured === false){
					var theheading = "Online";var domChange = "onlinewrapped";
				}
				else{
					var theheading = "Featured";var domChange = "featuredwrapped";
				}
			}
	{% endif %}
		{% unless settings.store_locator_use_selectBox == "none" %}
			if (state === startingState) { var openState = " open";	} else { var openState ="";}
			output+= '<div class="collapse-item anim-height'+openState+'" id="'+state.toLowerCase().replace(/\s+/g, '')+'">';
			output+= '<div class="collapse-wrap"><div class="collapse-content">';
		{% endunless %}
		{% if settings.store_locator_use_selectBox == "none" %}
			output+= '<div class="simple-list '+domChange+'" data-state="'+stateLiteral.toLowerCase().replace(/\s+/g, '')+'" data-country="non-international">';
			output+= '<div class="no-collapse"><div class="no-collapse-content">';
		{% endif %}
		output+= '<div class="statehead"><h3 class="thestate">'+theheading+'</h3></div>';
		{% if settings.store_locator_use_selectBox == "none" %}
		output+= '<div class="listing-content">';
		{% else %}
		output+= '<div class="float-mason">';
		{% endif %}
		
		for (var i=0,  tot=retailersByState.length; i < tot; i++) {
    		var name 		= retailersByState[i]["Name"];
			var address 	= retailersByState[i]["Address"];
			var address2 	= retailersByState[i]["Address 2"];
			var city 		= retailersByState[i]["City"];
			var country 	= retailersByState[i]["Country"];
			var zip 		= retailersByState[i]["Postal/Zip Code"];
			var phone 		= retailersByState[i]["Phone"];
			var website 	= retailersByState[i]["Website"];
			var lat 		= retailersByState[i]["Latitude"];
			var lng 		= retailersByState[i]["Longitude"];
			if ((physicalStore === true) && (featured === false)) {
				var thestate = retailersByState[i]["Province/State"]; var whereIntheWorld = "usa"; var retailClass="retailers_info";
			}
			else { 
				if (featured === false){
					var thestate = country; var whereIntheWorld = "onlinestores domchange-online retailers_info"; var retailClass="onlineClass";
				}
				else{
					var thestate = country; var whereIntheWorld = "featuredstores domchange-featured retailers_info"; var retailClass="featuredClass";
				}
			}
 			output+= '<div class="times-'+tot+' '+retailClass+' '+whereIntheWorld+'" itemscope itemtype="http://data-vocabulary.org/Organization"><ul itemprop="address" itemscope itemtype="http://data-vocabulary.org/Address">';
			if (website !=="") 
				{output+='<li itemprop="name" class="name_with_link"><a class="webres" target="_blank" href="'+website+'">'+name+'</a></li>';} 
			else 
				{output+='<li itemprop="url" class="just_the_name">' + name + '</li>';	
			}
			if (address !=="") 	{output+='<li itemprop="street-address">' + address + '</li>'; }
			if (address2 !=="") {output+='<li itemprop="street-address">' + address2 + '</li>';}
			if (city !=="") 	{output+='<li itemprop="street-address"><span itemprop="locality">' + city + '</span>, <span itemprop="region">' + thestate +' </span><span itemprop="postal-code">'+ zip + '</span></li>';}
			if (phone !=="")    {output+='<li itemprop="tel">' +phone + '</li>';}
			output+='</ul></div>';
		}
		
		output+= '</div></div></div></div>';
	} // end of else loop
}//end of for loop
{% if settings.store_locator_use_selectBox == "none" %}
output+= '</div>';
{% endif %}
{% if settings.store_locator_show_Overseas %}
	{% if settings.store_locator_use_selectBox == "none" %}
	output+= '<div class="fullspan"><h2 class="regionheading">International</h2></div>';
	output+= '<div class="inner clearfix float-mason" id="overseas">';
	{% endif %}
	{% unless settings.store_locator_use_selectBox == "none" %}
		{% if settings.store_locator_aggreagate_Overseas %}
			if (country === startingState) { var openState = " open"; } else { var openState =""; }
			output+= '<div class="collapse-item anim-height'+openState+'" id="international"><div class="collapse-wrap"><div class="collapse-content">';
		{% endif %}
	{% endunless %}
	for (var x=0;  x < overseasCountriesTotal; x++) {
		var country = overseasCountriesArr[x].country;
		var retailersByCountry = getObjects(data,'Country',country);
		retailersByCountry.sort(sortByProperty("Country"));
		replaceCountry(country);
		var theheading = retailersByCountry[0]["Country"].toLowerCase();
		var theheadingSanitized = theheading.replace(/\s+/g, '');
		var domChange = "no-domchange"; 
		{% unless settings.store_locator_use_selectBox == "none" %}
			{% if settings.store_locator_aggreagate_Overseas %}
			{% else %}
				if (country === startingState) { var openState = " open"; } else { var openState =""; }
				output+= '<div id="'+theheadingSanitized+'" class="collapse-item anim-height'+openState+'" data-country="'+theheadingSanitized+'">';
				output+= '<div class="collapse-wrap"><div class="collapse-content">';
			{% endif %}
		{% endunless %}
		{% if settings.store_locator_use_selectBox == "none" %}
			output+= '<div class="simple-list '+domChange+'" data-country="'+theheadingSanitized+'">';
			output+= '<div class="no-collapse"><div class="no-collapse-content">';
		{% endif %}
		output+= '<div class="statehead"><h3 class="thestate">'+theheading+'</h3></div>';
		{% if settings.store_locator_use_selectBox == "none" %}
		output+= '<div class="listing-content">';
		{% else %}
		output+= '<div class="float-mason">';
		{% endif %}
		for (var i=0,  tot=retailersByCountry.length; i < tot; i++) {
    		var name 		= retailersByCountry[i]["Name"];
			var address 	= retailersByCountry[i]["Address"];
			var address2 	= retailersByCountry[i]["Address 2"];
			var city 		= retailersByCountry[i]["City"];
			var country 	= retailersByCountry[i]["Country"];
			var zip 		= retailersByCountry[i]["Postal/Zip Code"];
			var phone 		= retailersByCountry[i]["Phone"];
			var website 	= retailersByCountry[i]["Website"];
			var lat 		= retailersByCountry[i]["Latitude"];
			var lng 		= retailersByCountry[i]["Longitude"];
			var thestate    = retailersByCountry[i]["Province/State"];
			output+= '<div class="times-'+tot+' retailers_info '+country+'" itemscope itemtype="http://data-vocabulary.org/Organization"><ul itemprop="address" itemscope itemtype="http://data-vocabulary.org/Address">';
			
			if (website !=="") {
				output+='<li itemprop="name" class="name_with_link"><a class="webres" target="_blank" href="'+website+'">'+name+'</a></li>';
			} else {
				output+='<li itemprop="url" class="just_the_name">' + name + '</li>';
			}
			if (address !=="")  {output+='<li itemprop="street-address">' + address + '</li>';}
			if (address2 !=="") {output+='<li itemprop="street-address">' + address2 + '</li>';}
			if (city !=="") 	{output+='<li itemprop="street-address"><span itemprop="locality">' + city + '</span>, <span itemprop="region">' + thestate +' </span><span itemprop="postal-code">'+ zip + '</span></li>';}
			if (phone !=="") 	{output+='<li itemprop="tel">' +phone + '</li>';}
			output+='</ul></div>';
		}
		output+= '</div>';

		{% unless settings.store_locator_use_selectBox == "none" %}
			{% if settings.store_locator_aggreagate_Overseas %}
			{% else %}
				output+= '</div></div></div>';
			{% endif %}
		{% endunless %}

		{% if settings.store_locator_use_selectBox == "none" %}
			output+= '</div></div></div>';
		{% endif %}
	}
	{% if settings.store_locator_use_selectBox == "none" %}
		output+= '</div>';
	{% endif %}
	{% unless settings.store_locator_use_selectBox == "none" %}
		{% if settings.store_locator_aggreagate_Overseas %}
			output+= '</div></div></div>';
		{% endif %}
	{% endunless %}
{% endif %}
{% if settings.store_locator_use_selectBox == "none" %}
	{% if settings.store_locator_show_Online %}
	if (countOnlineStores){
		var theh2Title = "Online";
		var theIDholder = "onlineStores";
		output+= '<div class="fullspan">';
		output+= '<h2 class="regionheading">'+theh2Title+'</h2></div><div id="'+theIDholder+'" class="inner clearfix float-mason">';
		output+= '</div>';
	}
	{% endif %}
{% endif %}
	{% if settings.store_locator_show_Special %}
	if (uniqueSpecialsTotal){
	{% unless settings.store_locator_use_selectBox == "none" %}
		{% if settings.store_locator_aggregate_Special %}
			if (country === startingState) { var openState = " open"; } else { var openState =""; }
			output+= '<div class="collapse-item anim-height'+openState+'" id="special"><div class="collapse-wrap"><div class="collapse-content">';
		{% endif %}
	{% endunless %}
	{% if settings.store_locator_use_selectBox == "none" %}
		var theh2Title = "Special Retailers";
		{% unless settings.store_locator_special_explanatory == blank %}
    		theh2Title = 'Special Retailers<span class="sup">*</span>';
		{% endunless %}
		var theIDholder = "specialStores";
		output+= '<div class="fullspan">';
		output+= '<h2 class="regionheading">'+theh2Title+'</h2></div>';
		{% if settings.store_locator_aggregate_Special %}
			output+= '<div id="'+theIDholder+'">';
		{% else %}
			output+= '<div id="'+theIDholder+'" class="inner clearfix float-mason">';
		{% endif %}
	{% endif %}
		{% if settings.store_locator_aggregate_Special %}
			for (var x=0;  x < uniqueSpecialsTotal; x++) {
				var thesplitName = uniqueSpecials[x];
				var specialRetailersBySplitName = getObjects(specialRetailersResultArr,'splitName',thesplitName);
				specialRetailersBySplitName.sort(sortByProperty("splitState"));
				var theheading = specialRetailersBySplitName[0]["splitName"];
				var theheadingSanitized = specialRetailersBySplitName[0]["splitName"].toLowerCase().replace(/\s+/g, '');
				var domChange = "no-domchange"; 
				output+= '<div class="fullspan statehead"><h3 class="thestate">'+theheading+'</h3></div>';
				output+= '<div class="thefeaturedheights inner clearfix float-mason" id="specialfeats-'+x+'">';
				for (var i=0,  tot=specialRetailersBySplitName.length; i < tot; i++) {
    				var name 		= specialRetailersBySplitName[i]["Name"];
					var address 	= specialRetailersBySplitName[i]["Address"];
					var address2 	= specialRetailersBySplitName[i]["Address 2"];
					var city 		= specialRetailersBySplitName[i]["City"];
					var thestate	= 'specialfeatured';
					var country 	= specialRetailersBySplitName[i]["Country"];
					var zip 		= specialRetailersBySplitName[i]["Postal/Zip Code"];
					var phone 		= specialRetailersBySplitName[i]["Phone"];
					var website 	= specialRetailersBySplitName[i]["Website"];
					var lat 		= specialRetailersBySplitName[i]["Latitude"];
					var lng 		= specialRetailersBySplitName[i]["Longitude"];
					output+= '<div class="simple-list '+domChange+' times-'+tot+' retailers_info '+thestate+'" data-country="'+theheadingSanitized+'" itemscope itemtype="http://data-vocabulary.org/Organization"><ul itemprop="address" itemscope itemtype="http://data-vocabulary.org/Address">';
					if (address !=="")  {output+='<li itemprop="street-address">' + address + '</li>';}
					if (address2 !=="") {output+='<li itemprop="street-address">' + address2 + '</li>';}
					if (city !=="") 	{output+='<li itemprop="street-address"><span itemprop="locality">' + city + '</span>, <span itemprop="postal-code">'+ zip + '</span></li>';}
					if (phone !=="") 	{output+='<li itemprop="tel">' +phone + '</li>';}
					output+='</ul></div>';
    			}
				output+= '</div>';
			}
		{% endif %}
 		{% if settings.store_locator_use_selectBox == "none" %}
 		output+= '</div></div>';
 		{% endif %}
		{% unless settings.store_locator_special_explanatory == blank %}
    		output+= '<p id="explanatory"><span class="sup">*</span> {{ settings.store_locator_special_explanatory }}</p>';
		{% endunless %}
	{% unless settings.store_locator_use_selectBox == "none" %}
		{% if settings.store_locator_aggregate_Special %}
			output+= '</div></div></div>';
		{% endif %}
	{% endunless %}
	}
	{% endif %}
output+= '</article>';
document.getElementById("retailers_placeholder").innerHTML=output;
function debounce(func, wait, immediate) {
	var timeout;
	return function() {
		var context = this, args = arguments;
		var later = function() {
			timeout = null;
			if (!immediate) func.apply(context, args);
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) func.apply(context, args);
	};
};
{% if settings.store_locator_use_selectBox == "dropdown" %}
	$(document).ready(function() {InitSorter();});
	var InitSorter = function(){
		var sortElement = $('#sort-by');
		sortElement
			.val($('#default-collection-sortby').val())
			.bind('change', function() {
				var closeBtn = ($(this).attr('data-collapse') == 'false') ? true : false;
				var collapseEl = '#'+$(this).val();
				var collapseItem = $(collapseEl);
				var toggleCollapse = function(item, type) {
					if(type == 'close')	{
						item
							.removeClass('open')
							.height(0);
					} 
					else {
            			item
              				.height(item.find('.collapse-wrap').height())
              				.addClass('open');
          			}      
        		};
        		if(collapseItem.is('.open')) {
          			var itemToClose = collapseItem;
          			if(itemToClose)toggleCollapse(itemToClose, 'close');
        		} 
        		else {
          			if(collapseItem.parents().find('.open').length){
            			toggleCollapse($('.collapse-item.open'), 'close');
            			setTimeout(function(){
              				toggleCollapse(collapseItem, 'open');
            			}, 350);
          			} 
          			else {
            			toggleCollapse(collapseItem, 'open');
          			}
        		}
  			});
			sortElement.addClass('hidden');
			var selectBox = new SelectBox({
    			selectbox:sortElement,
    			changeCallback:function(value){
      				sortElement.trigger('change');
    			}
  			});
		};
{% elsif settings.store_locator_use_selectBox == "links" %}
	$(document).ready(function() {
		$('a[data-collapse]').on('click', function(){
        	var btn = $(this),
        	togglers = $('a.togglers'),
            closeBtn = (btn.attr('data-collapse') == 'false') ? true : false;
            collapseEl = btn.attr('data-collapse-el'),
            collapseItem = $(collapseEl);
        	var toggleCollapse = function(item, type){
          		if(type == 'close'){
            		item
              			.removeClass('open')
              			.height(0);
          		} 
          		else {
            		item
              		.height(item.find('.collapse-wrap').height())
              		.addClass('open');
		        }      
        	};
        	if(collapseItem.is('.open') || closeBtn){
        		var itemToClose = (closeBtn) ? $(btn.attr('data-collapse-section')).find('.collapse-item.open') : collapseItem;
          		if(itemToClose)toggleCollapse(itemToClose, 'close');
        	}
        	else {
          		if(collapseItem.parents().find('.open').length){
          		togglers.removeClass('active');
        		btn.addClass('active');
            	toggleCollapse($('.collapse-item.open'), 'close');
            	setTimeout(function(){
              		toggleCollapse(collapseItem, 'open');
            	}, 350);
          		}
          		else {
            		toggleCollapse(collapseItem, 'open');
             		togglers.removeClass('active');
        	 		btn.addClass('active');
		        }
        	}
      	});
	});
{% else %}
var nonPhysicalHead = $('.onlinewrapped');
var nonPhysical = $( '.domchange-online' );
var nonPhysicalPlacehold = $( '#onlineStores');
{% if settings.store_locator_show_Online %}
	if (countOnlineStores){
		nonPhysical.addClass('simple-list').detach();
		nonPhysicalPlacehold.append( nonPhysical );
	}
{% endif %}
nonPhysicalHead.remove();
var featuredHead = $('.featuredwrapped');
var featuredStore = $( '.domchange-featured' );
var featuredPlacehold = $( '#specialStores');
{% if settings.store_locator_aggregate_Special %}
	featuredHead.remove();
{% else %}
	{% if settings.store_locator_show_Special %}
		if (uniqueSpecialsTotal){
			featuredStore.addClass('simple-list').detach();
			featuredPlacehold.append( featuredStore );
		}
	{% endif %}
	featuredHead.remove();
{% endif %}
{% endif %}
$(document).ready(function() {
	var $container, $w, columnNum=1;
  	$container = $('.float-mason');
  	colWidth = function () {
		$w = $('.commonuse').width(), 
		columnWidth = 0,
		gutterwidth=20;
		{% if settings.store_locator_order == "fitColumns" and settings.store_locator_use_selectBox == "none" %}
			gutterwidth=0;
		{% endif %}
		if ($w < {{settings.store_locator_breakpoint_3}}) {
            columnNum  = {{settings.store_locator_columnNum_4}};
        }
		else if ($w <= {{settings.store_locator_breakpoint_2}}) {
            columnNum  = {{settings.store_locator_columnNum_3}};
        }
        else if ($w <= {{settings.store_locator_breakpoint_1}}) {
            columnNum  = {{settings.store_locator_columnNum_2}};
        }
        else if ($w > {{settings.store_locator_breakpoint_1}}) {
            columnNum  = {{settings.store_locator_columnNum_1}};
        }
		$w -= gutterwidth*(columnNum-1);
		columnWidth = Math.floor($w/columnNum);
		$('.commonuse').find('.simple-list').each(function() {
			var $item = $(this),
				multiplier_w = $item.attr('class').match(/simple-list(\d)/),
				width = multiplier_w ? columnWidth*multiplier_w[1]-20 : columnWidth;//,
			$item.css({
				width: width,
			});
		});
		return columnWidth;
	};
	{% if settings.store_locator_order == "masonry" %}
  		isotope = function () {
			$container.isotope({
				isResizeBound: false,
				isFitWidth: false,
				{% unless settings.store_locator_use_selectBox == "none" %}
				itemSelector: '.retailers_info',
				{% endunless %}
				{% if settings.store_locator_use_selectBox == "none" %}
				itemSelector: '.simple-list',
				{% endif %}
				masonry: {
					columnWidth: colWidth(),
					gutter: gutterwidth
				}
			});
		};
	{% else %}
		function processAutoheight(parent,children) {
			var Normalizer = 0;
			var heightverifier = 0;
			var columnVerifier = 1;
			//var elementCount = 0;
			var offsetHeight = 0;
    		var maxHeight = -1;
    		var minHeight = 10000;
    		var totalHeight = 0;
    		parentWidth = $(parent).outerWidth(true); 
    		$(parent).find(children).each(function(){
        		height = $(this).outerHeight(true); 
        		maxHeight = maxHeight > $(this).height() ? maxHeight : $(this).height();
        		minHeight = minHeight < $(this).height() ? minHeight : $(this).height();
        		totalHeight += height;
    		});
            Normalizer =  Math.ceil((totalHeight - (columnNum * maxHeight)) / (columnNum * minHeight));
            Normalizer = Normalizer < 0 ? Normalizer=0 : Normalizer;
           	//var averageColumnHeight = Math.ceil(totalHeight/columnNum);
            var assignedColumnHeight = Math.ceil(maxHeight+(Normalizer*minHeight)); // Normally distributed
			for (i = 1; i <= columnNum; i++) {
    			var checkTotalAssignedHeight = assignedColumnHeight*i ;
    			if (checkTotalAssignedHeight > totalHeight) {
    				if (i == columnNum) {
    					var diff=checkTotalAssignedHeight-totalHeight;
    					if (diff<minHeight){
    						assignedColumnHeight += minHeight;
    					}    					
    				}
    				else{
    					if ((assignedColumnHeight - minHeight <= 0) || assignedColumnHeight - minHeight == minHeight) {
    					}
    					else{
    						assignedColumnHeight -= minHeight;
    					}
	   				}
    			}
			}
			var offsetHeights=[];
            $(parent).find(children).each(function(){
        		height = $(this).outerHeight(true);
        		//minHeight = minHeight < $(this).height() ? minHeight : $(this).height();
        		//elementCount++;
       			if (heightverifier <= assignedColumnHeight){
       				heightverifier += height;
       				if (heightverifier > assignedColumnHeight){
						columnVerifier++;

						if (columnVerifier>columnNum){
							var offsetHeight = +height;
							offsetHeights.push(offsetHeight);
        				}
						heightverifier = 0;
       				}
       			} 	
        		if (heightverifier==0){
        		 	heightverifier = height;
        		}
    		});
			if(offsetHeights.length > 0) {
			    var offsetSum = 0;
				$.each(offsetHeights,function(){offsetSum+=parseFloat(this) || 0;});
			}
			if (columnVerifier>columnNum){
				var addedHeight = offsetSum>minHeight ? offsetSum-minHeight:minHeight;
					correctAssignedHeight(parent,assignedColumnHeight,addedHeight);
       		   	}
       		else {
       		   	applyAssignedHeight(parent,assignedColumnHeight);
       		}
		}
		function applyAssignedHeight(parent,assignedColumnHeight){
			$(parent).height(assignedColumnHeight);
		}
		function correctAssignedHeight(parent,assignedColumnHeight,minHeight){
			$(parent).height(assignedColumnHeight+minHeight);
		}
		doYourMath = function () {
			colWidth();
			processAutoheight('#homeland','.simple-list');
			processAutoheight('#overseas','.simple-list');
			processAutoheight('#onlineStores','.simple-list');
			{% if settings.store_locator_aggregate_Special %}
			for (var x=0;  x < uniqueSpecialsTotal; x++) {
				processAutoheight('#specialfeats-' + x + '','.simple-list');
			}
			{% else %}
			processAutoheight('#specialStores','.simple-list');
			{% endif %}
		};
		isotope = function () {
			$container.isotope({
				isResizeBound: false,
				isFitWidth: false,
				{% unless settings.store_locator_use_selectBox == "none" %}
				itemSelector: '.retailers_info',
				masonry: {
					columnWidth: colWidth(),
					gutter: gutterwidth
				}
				{% endunless %}
				{% if settings.store_locator_use_selectBox == "none" %}
				itemSelector: '.simple-list',
				layoutMode: 'fitColumns',
				{% endif %}
			});
		};
		{% if settings.store_locator_use_selectBox == "none" %}
		doYourMath();
		{% endif %}
	{% endif %}
  	isotope();
});

var InitLayoutCalculation = function(){
	{% if settings.store_locator_order == "fitColumns" %}
		{% if settings.store_locator_use_selectBox == "none" %}
			doYourMath();
		{% endif %}
	{% endif %}
    isotope();
};

var reLayout = debounce(function() {InitLayoutCalculation();}, 250);

$(window).load(function(){
	InitLayoutCalculation();
	$( "#loading" ).fadeOut( "fast", function() {
    	$( "#loading" ).remove();
  	});
});

window.addEventListener('resize', reLayout);
</script>